name: Deploy to DigitalOcean

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint

      - name: Run tests
        run: npm test

      - name: Build application
        run: npm run build

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Deploy to DigitalOcean App Platform
        run: |
          # Check if app exists
          if doctl apps list --format Name --no-header | grep -q "^lectio-api$"; then
            echo "App exists, updating..."
            APP_ID=$(doctl apps list --format ID,Name --no-header | grep "lectio-api$" | awk '{print $1}')
            doctl apps update $APP_ID --spec app.yaml
            
            # Create deployment
            doctl apps create-deployment $APP_ID --wait
          else
            echo "Creating new app..."
            doctl apps create --spec app.yaml --wait
          fi

      - name: Get app URL
        id: app-url
        run: |
          APP_ID=$(doctl apps list --format ID,Name --no-header | grep "lectio-api$" | awk '{print $1}')
          APP_URL=$(doctl apps get $APP_ID --format DefaultIngress --no-header)
          echo "url=https://$APP_URL" >> $GITHUB_OUTPUT
          echo "App deployed to: https://$APP_URL"

      - name: Validate deployment
        run: |
          sleep 60  # Wait for app to stabilize
          curl -f ${{ steps.app-url.outputs.url }}/health || exit 1
          echo "Health check passed!"