services:
  # Main API service
  lectionary-api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "${PORT:-3005}:3000"
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - PORT=3000
      - API_VERSION=${API_VERSION:-v1}
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=${DB_NAME:-lectionary_api}
      - DB_USERNAME=${DB_USERNAME:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-password}
      - DB_SSL=false
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=${JWT_SECRET:-dev-secret-change-in-production}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN:-1h}
      - JWT_REFRESH_EXPIRES_IN=${JWT_REFRESH_EXPIRES_IN:-7d}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - SWAGGER_ENABLED=${SWAGGER_ENABLED:-true}
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    volumes:
      - ./src:/app/src:ro
      - ./logs:/app/logs
    networks:
      - lectionary-network

  # PostgreSQL database
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=${DB_NAME:-lectionary_api}
      - POSTGRES_USER=${DB_USERNAME:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-password}
    ports:
      - "${DB_PORT:-5433}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d:ro
    restart: unless-stopped
    networks:
      - lectionary-network

  # Redis for caching
  redis:
    image: redis:7-alpine
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - lectionary-network
    command: redis-server --appendonly yes

  # Development service with hot reload
  lectionary-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "${DEV_PORT:-3001}:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - API_VERSION=${API_VERSION:-v1}
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=${DB_NAME:-lectionary_api}
      - DB_USERNAME=${DB_USERNAME:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-password}
      - DB_SSL=false
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=${JWT_SECRET:-dev-secret-change-in-production}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN:-1h}
      - JWT_REFRESH_EXPIRES_IN=${JWT_REFRESH_EXPIRES_IN:-7d}
      - LOG_LEVEL=${LOG_LEVEL:-debug}
      - SWAGGER_ENABLED=true
      - DEBUG_MODE=true
    depends_on:
      - postgres
      - redis
    volumes:
      - ./src:/app/src
      - ./tests:/app/tests
      - /app/node_modules
    restart: unless-stopped
    networks:
      - lectionary-network
    profiles:
      - dev

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  lectionary-network:
    driver: bridge
